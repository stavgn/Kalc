// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing module for UniversitySelector Component renders correctly 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <UniversitySelector
    selectUniversity={[Function]}
    universities={
        Array [
            Object {
              "id": 1,
            },
            Object {
              "id": 2,
            },
            Object {
              "id": 3,
            },
            Object {
              "id": 4,
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": UniversitySelector {
      "_reactInternalFiber": FiberNode {
        "_debugID": 4,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "selectUniversity": [Function],
              "universities": Array [
                Object {
                  "id": 1,
                },
                Object {
                  "id": 2,
                },
                Object {
                  "id": 3,
                },
                Object {
                  "id": 4,
                },
              ],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "selectUniversity": [Function],
              "universities": Array [
                Object {
                  "id": 1,
                },
                Object {
                  "id": 2,
                },
                Object {
                  "id": 3,
                },
                Object {
                  "id": 4,
                },
              ],
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="row center-align"
                  >
                                    <div
                                                      class="col s2"
                                    />
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "selectUniversity": [Function],
                                                                  "universities": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                    },
                                                                    Object {
                                                                      "id": 2,
                                                                    },
                                                                    Object {
                                                                      "id": 3,
                                                                    },
                                                                    Object {
                                                                      "id": 4,
                                                                    },
                                                                  ],
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "selectUniversity": [Function],
                                                                  "universities": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                    },
                                                                    Object {
                                                                      "id": 2,
                                                                    },
                                                                    Object {
                                                                      "id": 3,
                                                                    },
                                                                    Object {
                                                                      "id": 4,
                                                                    },
                                                                  ],
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "selectUniversity": [Function],
                                                "universities": Array [
                                                  Object {
                                                    "id": 1,
                                                  },
                                                  Object {
                                                    "id": 2,
                                                  },
                                                  Object {
                                                    "id": 3,
                                                  },
                                                  Object {
                                                    "id": 4,
                                                  },
                                                ],
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="row center-align"
                >
                                <div
                                                class="col s2"
                                />
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "col s2",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": "1",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 1,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": "2",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 2,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "internalContextTag": 0,
                    "key": "3",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 3,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "internalContextTag": 0,
                      "key": "4",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 4,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 4,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 3,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 2,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": UniversityLabel {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "forceUpdate": [Function],
                  "props": Object {
                    "handleUniversitySelection": [Function],
                    "id": 1,
                  },
                  "refs": Object {},
                  "render": [Function],
                  "selectUniversity": [Function],
                  "setState": [Function],
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Array [
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={1}
/>,
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={2}
/>,
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={3}
/>,
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={4}
/>,
              ],
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "type": null,
              "updateQueue": null,
            },
            "stateNode": <div
              class="col s2"
/>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div
                className="col s2"
/>,
              Array [
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={1}
/>,
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={2}
/>,
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={3}
/>,
                <UniversityLabel
                  handleUniversitySelection={[Function]}
                  id={4}
/>,
              ],
            ],
            "className": "row center-align",
            "style": Object {},
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="row center-align"
>
            <div
                        class="col s2"
            />
</div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "selectUniversity": [Function],
          "universities": Array [
            Object {
              "id": 1,
            },
            Object {
              "id": 2,
            },
            Object {
              "id": 3,
            },
            Object {
              "id": 4,
            },
          ],
        },
        "memoizedState": null,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "selectUniversity": [Function],
              "universities": Array [
                Object {
                  "id": 1,
                },
                Object {
                  "id": 2,
                },
                Object {
                  "id": 3,
                },
                Object {
                  "id": 4,
                },
              ],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "selectUniversity": [Function],
              "universities": Array [
                Object {
                  "id": 1,
                },
                Object {
                  "id": 2,
                },
                Object {
                  "id": 3,
                },
                Object {
                  "id": 4,
                },
              ],
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="row center-align"
                  >
                                    <div
                                                      class="col s2"
                                    />
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "selectUniversity": [Function],
                                                                  "universities": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                    },
                                                                    Object {
                                                                      "id": 2,
                                                                    },
                                                                    Object {
                                                                      "id": 3,
                                                                    },
                                                                    Object {
                                                                      "id": 4,
                                                                    },
                                                                  ],
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "selectUniversity": [Function],
                                                                  "universities": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                    },
                                                                    Object {
                                                                      "id": 2,
                                                                    },
                                                                    Object {
                                                                      "id": 3,
                                                                    },
                                                                    Object {
                                                                      "id": 4,
                                                                    },
                                                                  ],
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "selectUniversity": [Function],
                                                "universities": Array [
                                                  Object {
                                                    "id": 1,
                                                  },
                                                  Object {
                                                    "id": 2,
                                                  },
                                                  Object {
                                                    "id": 3,
                                                  },
                                                  Object {
                                                    "id": 4,
                                                  },
                                                ],
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="row center-align"
                >
                                <div
                                                class="col s2"
                                />
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {
        "selectUniversity": [Function],
        "universities": Array [
          Object {
            "id": 1,
          },
          Object {
            "id": 2,
          },
          Object {
            "id": 3,
          },
          Object {
            "id": 4,
          },
        ],
      },
      "refs": Object {},
      "selected": Array [],
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": null,
    "nodeType": "class",
    "props": Object {
      "selectUniversity": [Function],
      "universities": Array [
        Object {
          "id": 1,
        },
        Object {
          "id": 2,
        },
        Object {
          "id": 3,
        },
        Object {
          "id": 4,
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="row center-align"
>
        <div
                class="col s2"
        />
</div>,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col s2"
/>,
          Array [
            <UniversityLabel
              handleUniversitySelection={[Function]}
              id={1}
/>,
            <UniversityLabel
              handleUniversitySelection={[Function]}
              id={2}
/>,
            <UniversityLabel
              handleUniversitySelection={[Function]}
              id={3}
/>,
            <UniversityLabel
              handleUniversitySelection={[Function]}
              id={4}
/>,
          ],
        ],
        "className": "row center-align",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="col s2"
/>,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "col s2",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "div",
        },
        Object {
          "instance": UniversityLabel {
            "_reactInternalFiber": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": "1",
              "lastEffect": null,
              "memoizedProps": Object {
                "handleUniversitySelection": [Function],
                "id": 1,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Array [
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={1}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={2}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={3}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={4}
/>,
                ],
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "col s2",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <div
                      class="col s2"
/>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="col s2"
/>,
                      Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                    ],
                    "className": "row center-align",
                    "style": Object {},
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "selectUniversity": [Function],
                      "universities": Array [
                        Object {
                          "id": 1,
                        },
                        Object {
                          "id": 2,
                        },
                        Object {
                          "id": 3,
                        },
                        Object {
                          "id": 4,
                        },
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": UniversitySelector {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "refs": Object {},
                      "selected": Array [],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div
                    class="row center-align"
>
                    <div
                                        class="col s2"
                    />
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "type": null,
                "updateQueue": null,
              },
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": "2",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 2,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "internalContextTag": 0,
                  "key": "3",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 3,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Array [
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={1}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={2}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={3}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={4}
/>,
                    ],
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "col s2",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <div
                          class="col s2"
/>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col s2"
/>,
                          Array [
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={1}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={2}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={3}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={4}
/>,
                          ],
                        ],
                        "className": "row center-align",
                        "style": Object {},
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": UniversitySelector {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "refs": Object {},
                          "selected": Array [],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div
                        class="row center-align"
>
                        <div
                                                class="col s2"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "internalContextTag": 0,
                    "key": "4",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 4,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "col s2",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <div
                            class="col s2"
/>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="col s2"
/>,
                            Array [
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={1}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={2}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={3}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={4}
/>,
                            ],
                          ],
                          "className": "row center-align",
                          "style": Object {},
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": UniversitySelector {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                            "refs": Object {},
                            "selected": Array [],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div
                          class="row center-align"
>
                          <div
                                                    class="col s2"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 4,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 3,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": UniversityLabel {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "forceUpdate": [Function],
                  "props": Object {
                    "handleUniversitySelection": [Function],
                    "id": 2,
                  },
                  "refs": Object {},
                  "render": [Function],
                  "selectUniversity": [Function],
                  "setState": [Function],
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "forceUpdate": [Function],
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 1,
            },
            "refs": Object {},
            "render": [Function],
            "selectUniversity": [Function],
            "setState": [Function],
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "handleUniversitySelection": [Function],
            "id": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": UniversityLabel {
            "_reactInternalFiber": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": "2",
              "lastEffect": null,
              "memoizedProps": Object {
                "handleUniversitySelection": [Function],
                "id": 2,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "1",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 1,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": [Circular],
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Array [
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={1}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={2}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={3}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={4}
/>,
                ],
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "col s2",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <div
                      class="col s2"
/>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="col s2"
/>,
                      Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                    ],
                    "className": "row center-align",
                    "style": Object {},
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "selectUniversity": [Function],
                      "universities": Array [
                        Object {
                          "id": 1,
                        },
                        Object {
                          "id": 2,
                        },
                        Object {
                          "id": 3,
                        },
                        Object {
                          "id": 4,
                        },
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": UniversitySelector {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "refs": Object {},
                      "selected": Array [],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div
                    class="row center-align"
>
                    <div
                                        class="col s2"
                    />
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "type": null,
                "updateQueue": null,
              },
              "sibling": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "internalContextTag": 0,
                "key": "3",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 3,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "internalContextTag": 0,
                  "key": "4",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 4,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "1",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 1,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Array [
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={1}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={2}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={3}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={4}
/>,
                    ],
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "col s2",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <div
                          class="col s2"
/>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col s2"
/>,
                          Array [
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={1}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={2}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={3}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={4}
/>,
                          ],
                        ],
                        "className": "row center-align",
                        "style": Object {},
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": UniversitySelector {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "refs": Object {},
                          "selected": Array [],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div
                        class="row center-align"
>
                        <div
                                                class="col s2"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 4,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": UniversityLabel {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "forceUpdate": [Function],
                  "props": Object {
                    "handleUniversitySelection": [Function],
                    "id": 3,
                  },
                  "refs": Object {},
                  "render": [Function],
                  "selectUniversity": [Function],
                  "setState": [Function],
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "forceUpdate": [Function],
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 2,
            },
            "refs": Object {},
            "render": [Function],
            "selectUniversity": [Function],
            "setState": [Function],
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "handleUniversitySelection": [Function],
            "id": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": UniversityLabel {
            "_reactInternalFiber": FiberNode {
              "_debugID": 10,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "internalContextTag": 0,
              "key": "3",
              "lastEffect": null,
              "memoizedProps": Object {
                "handleUniversitySelection": [Function],
                "id": 3,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "1",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 1,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "2",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 2,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 2,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Array [
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={1}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={2}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={3}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={4}
/>,
                ],
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "col s2",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <div
                      class="col s2"
/>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="col s2"
/>,
                      Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                    ],
                    "className": "row center-align",
                    "style": Object {},
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "selectUniversity": [Function],
                      "universities": Array [
                        Object {
                          "id": 1,
                        },
                        Object {
                          "id": 2,
                        },
                        Object {
                          "id": 3,
                        },
                        Object {
                          "id": 4,
                        },
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": UniversitySelector {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "refs": Object {},
                      "selected": Array [],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div
                    class="row center-align"
>
                    <div
                                        class="col s2"
                    />
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "type": null,
                "updateQueue": null,
              },
              "sibling": FiberNode {
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 3,
                "internalContextTag": 0,
                "key": "4",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 4,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "2",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 2,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 2,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": UniversityLabel {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "forceUpdate": [Function],
                  "props": Object {
                    "handleUniversitySelection": [Function],
                    "id": 4,
                  },
                  "refs": Object {},
                  "render": [Function],
                  "selectUniversity": [Function],
                  "setState": [Function],
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "forceUpdate": [Function],
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 3,
            },
            "refs": Object {},
            "render": [Function],
            "selectUniversity": [Function],
            "setState": [Function],
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "handleUniversitySelection": [Function],
            "id": 3,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": UniversityLabel {
            "_reactInternalFiber": FiberNode {
              "_debugID": 11,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 3,
              "internalContextTag": 0,
              "key": "4",
              "lastEffect": null,
              "memoizedProps": Object {
                "handleUniversitySelection": [Function],
                "id": 4,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "1",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 1,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "2",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 2,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "internalContextTag": 0,
                      "key": "3",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 3,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 3,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 2,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Array [
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={1}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={2}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={3}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={4}
/>,
                ],
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "col s2",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <div
                      class="col s2"
/>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="col s2"
/>,
                      Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                    ],
                    "className": "row center-align",
                    "style": Object {},
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "selectUniversity": [Function],
                      "universities": Array [
                        Object {
                          "id": 1,
                        },
                        Object {
                          "id": 2,
                        },
                        Object {
                          "id": 3,
                        },
                        Object {
                          "id": 4,
                        },
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "selectUniversity": [Function],
                                                                                    "universities": Array [
                                                                                      Object {
                                                                                        "id": 1,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 2,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 3,
                                                                                      },
                                                                                      Object {
                                                                                        "id": 4,
                                                                                      },
                                                                                    ],
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="row center-align"
                            >
                                                        <div
                                                                                    class="col s2"
                                                        />
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": UniversitySelector {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "refs": Object {},
                      "selected": Array [],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div
                    class="row center-align"
>
                    <div
                                        class="col s2"
                    />
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "type": null,
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "forceUpdate": [Function],
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 4,
            },
            "refs": Object {},
            "render": [Function],
            "selectUniversity": [Function],
            "setState": [Function],
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "handleUniversitySelection": [Function],
            "id": 4,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": UniversitySelector {
        "_reactInternalFiber": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="row center-align"
                    >
                                        <div
                                                            class="col s2"
                                        />
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "selectUniversity": [Function],
                                                                        "universities": Array [
                                                                          Object {
                                                                            "id": 1,
                                                                          },
                                                                          Object {
                                                                            "id": 2,
                                                                          },
                                                                          Object {
                                                                            "id": 3,
                                                                          },
                                                                          Object {
                                                                            "id": 4,
                                                                          },
                                                                        ],
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "selectUniversity": [Function],
                                                                        "universities": Array [
                                                                          Object {
                                                                            "id": 1,
                                                                          },
                                                                          Object {
                                                                            "id": 2,
                                                                          },
                                                                          Object {
                                                                            "id": 3,
                                                                          },
                                                                          Object {
                                                                            "id": 4,
                                                                          },
                                                                        ],
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "selectUniversity": [Function],
                                                      "universities": Array [
                                                        Object {
                                                          "id": 1,
                                                        },
                                                        Object {
                                                          "id": 2,
                                                        },
                                                        Object {
                                                          "id": 3,
                                                        },
                                                        Object {
                                                          "id": 4,
                                                        },
                                                      ],
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="row center-align"
                  >
                                    <div
                                                      class="col s2"
                                    />
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "selectUniversity": [Function],
                  "universities": Array [
                    Object {
                      "id": 1,
                    },
                    Object {
                      "id": 2,
                    },
                    Object {
                      "id": 3,
                    },
                    Object {
                      "id": 4,
                    },
                  ],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "selectUniversity": [Function],
                  "universities": Array [
                    Object {
                      "id": 1,
                    },
                    Object {
                      "id": 2,
                    },
                    Object {
                      "id": 3,
                    },
                    Object {
                      "id": 4,
                    },
                  ],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "col s2",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "1",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 1,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "2",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 2,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "internalContextTag": 0,
                      "key": "3",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 3,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "internalContextTag": 0,
                        "key": "4",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "handleUniversitySelection": [Function],
                          "id": 4,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": UniversityLabel {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "forceUpdate": [Function],
                          "props": Object {
                            "handleUniversitySelection": [Function],
                            "id": 4,
                          },
                          "refs": Object {},
                          "render": [Function],
                          "selectUniversity": [Function],
                          "setState": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 3,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 2,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Array [
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={1}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={2}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={3}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={4}
/>,
                ],
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "type": null,
                "updateQueue": null,
              },
              "stateNode": <div
                class="col s2"
/>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="col s2"
/>,
                Array [
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={1}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={2}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={3}
/>,
                  <UniversityLabel
                    handleUniversitySelection={[Function]}
                    id={4}
/>,
                ],
              ],
              "className": "row center-align",
              "style": Object {},
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="row center-align"
>
              <div
                            class="col s2"
              />
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "selectUniversity": [Function],
            "universities": Array [
              Object {
                "id": 1,
              },
              Object {
                "id": 2,
              },
              Object {
                "id": 3,
              },
              Object {
                "id": 4,
              },
            ],
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "selectUniversity": [Function],
                "universities": Array [
                  Object {
                    "id": 1,
                  },
                  Object {
                    "id": 2,
                  },
                  Object {
                    "id": 3,
                  },
                  Object {
                    "id": 4,
                  },
                ],
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="row center-align"
                    >
                                        <div
                                                            class="col s2"
                                        />
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "selectUniversity": [Function],
                                                                        "universities": Array [
                                                                          Object {
                                                                            "id": 1,
                                                                          },
                                                                          Object {
                                                                            "id": 2,
                                                                          },
                                                                          Object {
                                                                            "id": 3,
                                                                          },
                                                                          Object {
                                                                            "id": 4,
                                                                          },
                                                                        ],
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "selectUniversity": [Function],
                                                                        "universities": Array [
                                                                          Object {
                                                                            "id": 1,
                                                                          },
                                                                          Object {
                                                                            "id": 2,
                                                                          },
                                                                          Object {
                                                                            "id": 3,
                                                                          },
                                                                          Object {
                                                                            "id": 4,
                                                                          },
                                                                        ],
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "selectUniversity": [Function],
                                                      "universities": Array [
                                                        Object {
                                                          "id": 1,
                                                        },
                                                        Object {
                                                          "id": 2,
                                                        },
                                                        Object {
                                                          "id": 3,
                                                        },
                                                        Object {
                                                          "id": 4,
                                                        },
                                                      ],
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="row center-align"
                  >
                                    <div
                                                      class="col s2"
                                    />
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "selectUniversity": [Function],
                  "universities": Array [
                    Object {
                      "id": 1,
                    },
                    Object {
                      "id": 2,
                    },
                    Object {
                      "id": 3,
                    },
                    Object {
                      "id": 4,
                    },
                  ],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "selectUniversity": [Function],
                  "universities": Array [
                    Object {
                      "id": 1,
                    },
                    Object {
                      "id": 2,
                    },
                    Object {
                      "id": 3,
                    },
                    Object {
                      "id": 4,
                    },
                  ],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "selectUniversity": [Function],
          "universities": Array [
            Object {
              "id": 1,
            },
            Object {
              "id": 2,
            },
            Object {
              "id": 3,
            },
            Object {
              "id": 4,
            },
          ],
        },
        "refs": Object {},
        "selected": Array [],
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": null,
      "nodeType": "class",
      "props": Object {
        "selectUniversity": [Function],
        "universities": Array [
          Object {
            "id": 1,
          },
          Object {
            "id": 2,
          },
          Object {
            "id": 3,
          },
          Object {
            "id": 4,
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="row center-align"
>
          <div
                    class="col s2"
          />
</div>,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col s2"
/>,
            Array [
              <UniversityLabel
                handleUniversitySelection={[Function]}
                id={1}
/>,
              <UniversityLabel
                handleUniversitySelection={[Function]}
                id={2}
/>,
              <UniversityLabel
                handleUniversitySelection={[Function]}
                id={3}
/>,
              <UniversityLabel
                handleUniversitySelection={[Function]}
                id={4}
/>,
            ],
          ],
          "className": "row center-align",
          "style": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="col s2"
/>,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "className": "col s2",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "div",
          },
          Object {
            "instance": UniversityLabel {
              "_reactInternalFiber": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": "1",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 1,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": "2",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 2,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Array [
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={1}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={2}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={3}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={4}
/>,
                    ],
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "col s2",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <div
                          class="col s2"
/>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col s2"
/>,
                          Array [
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={1}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={2}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={3}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={4}
/>,
                          ],
                        ],
                        "className": "row center-align",
                        "style": Object {},
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": UniversitySelector {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "refs": Object {},
                          "selected": Array [],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div
                        class="row center-align"
>
                        <div
                                                class="col s2"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "internalContextTag": 0,
                    "key": "3",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 3,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "col s2",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <div
                            class="col s2"
/>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="col s2"
/>,
                            Array [
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={1}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={2}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={3}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={4}
/>,
                            ],
                          ],
                          "className": "row center-align",
                          "style": Object {},
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": UniversitySelector {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                            "refs": Object {},
                            "selected": Array [],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div
                          class="row center-align"
>
                          <div
                                                    class="col s2"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "internalContextTag": 0,
                      "key": "4",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 4,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 7,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 6,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "col s2",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <div
                              class="col s2"
/>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="col s2"
/>,
                              Array [
                                <UniversityLabel
                                  handleUniversitySelection={[Function]}
                                  id={1}
/>,
                                <UniversityLabel
                                  handleUniversitySelection={[Function]}
                                  id={2}
/>,
                                <UniversityLabel
                                  handleUniversitySelection={[Function]}
                                  id={3}
/>,
                                <UniversityLabel
                                  handleUniversitySelection={[Function]}
                                  id={4}
/>,
                              ],
                            ],
                            "className": "row center-align",
                            "style": Object {},
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 3,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="row center-align"
                                      >
                                                                            <div
                                                                                                                  class="col s2"
                                                                            />
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedWork": null,
                                    "hydrate": false,
                                    "isReadyForCommit": false,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "callbackList": null,
                                    "expirationTime": 1,
                                    "first": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "isForced": false,
                                      "isReplace": false,
                                      "next": null,
                                      "nextCallback": null,
                                      "partialState": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                                                                    Object {
                                                                                                                              "selectUniversity": [Function],
                                                                                                                              "universities": Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 2,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 3,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 4,
                                                                                                                                },
                                                                                                                              ],
                                                                                                                            }
                                          }
/>,
                                      },
                                    },
                                    "hasForceUpdate": false,
                                    "isInitialized": false,
                                    "isProcessing": false,
                                    "last": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "isForced": false,
                                      "isReplace": false,
                                      "next": null,
                                      "nextCallback": null,
                                      "partialState": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                                                                    Object {
                                                                                                                              "selectUniversity": [Function],
                                                                                                                              "universities": Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 2,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 3,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 4,
                                                                                                                                },
                                                                                                                              ],
                                                                                                                            }
                                          }
/>,
                                      },
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": null,
                              },
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "selectUniversity": [Function],
                                    "universities": Array [
                                      Object {
                                        "id": 1,
                                      },
                                      Object {
                                        "id": 2,
                                      },
                                      Object {
                                        "id": 3,
                                      },
                                      Object {
                                        "id": 4,
                                      },
                                    ],
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "selectUniversity": [Function],
                                    "universities": Array [
                                      Object {
                                        "id": 1,
                                      },
                                      Object {
                                        "id": 2,
                                      },
                                      Object {
                                        "id": 3,
                                      },
                                      Object {
                                        "id": 4,
                                      },
                                    ],
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 3,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="row center-align"
                                      >
                                                                            <div
                                                                                                                  class="col s2"
                                                                            />
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedWork": null,
                                    "hydrate": false,
                                    "isReadyForCommit": false,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "callbackList": null,
                                    "expirationTime": 1,
                                    "first": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "isForced": false,
                                      "isReplace": false,
                                      "next": null,
                                      "nextCallback": null,
                                      "partialState": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                                                                    Object {
                                                                                                                              "selectUniversity": [Function],
                                                                                                                              "universities": Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 2,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 3,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 4,
                                                                                                                                },
                                                                                                                              ],
                                                                                                                            }
                                          }
/>,
                                      },
                                    },
                                    "hasForceUpdate": false,
                                    "isInitialized": false,
                                    "isProcessing": false,
                                    "last": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "isForced": false,
                                      "isReplace": false,
                                      "next": null,
                                      "nextCallback": null,
                                      "partialState": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                                                                    Object {
                                                                                                                              "selectUniversity": [Function],
                                                                                                                              "universities": Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 2,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 3,
                                                                                                                                },
                                                                                                                                Object {
                                                                                                                                  "id": 4,
                                                                                                                                },
                                                                                                                              ],
                                                                                                                            }
                                          }
/>,
                                      },
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": null,
                              },
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "selectUniversity": [Function],
                                    "universities": Array [
                                      Object {
                                        "id": 1,
                                      },
                                      Object {
                                        "id": 2,
                                      },
                                      Object {
                                        "id": 3,
                                      },
                                      Object {
                                        "id": 4,
                                      },
                                    ],
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "selectUniversity": [Function],
                                    "universities": Array [
                                      Object {
                                        "id": 1,
                                      },
                                      Object {
                                        "id": 2,
                                      },
                                      Object {
                                        "id": 3,
                                      },
                                      Object {
                                        "id": 4,
                                      },
                                    ],
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": UniversitySelector {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                              "refs": Object {},
                              "selected": Array [],
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": <div
                            class="row center-align"
>
                            <div
                                                        class="col s2"
                            />
</div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 10,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 4,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 3,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 2,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "forceUpdate": [Function],
              "props": Object {
                "handleUniversitySelection": [Function],
                "id": 1,
              },
              "refs": Object {},
              "render": [Function],
              "selectUniversity": [Function],
              "setState": [Function],
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": UniversityLabel {
              "_reactInternalFiber": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": "2",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 2,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "internalContextTag": 0,
                  "key": "3",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 3,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "1",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 1,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Array [
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={1}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={2}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={3}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={4}
/>,
                    ],
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "col s2",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <div
                          class="col s2"
/>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col s2"
/>,
                          Array [
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={1}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={2}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={3}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={4}
/>,
                          ],
                        ],
                        "className": "row center-align",
                        "style": Object {},
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": UniversitySelector {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "refs": Object {},
                          "selected": Array [],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div
                        class="row center-align"
>
                        <div
                                                class="col s2"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "internalContextTag": 0,
                    "key": "4",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 4,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "1",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "handleUniversitySelection": [Function],
                          "id": 1,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": UniversityLabel {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "forceUpdate": [Function],
                          "props": Object {
                            "handleUniversitySelection": [Function],
                            "id": 1,
                          },
                          "refs": Object {},
                          "render": [Function],
                          "selectUniversity": [Function],
                          "setState": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Array [
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={1}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={2}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={3}
/>,
                        <UniversityLabel
                          handleUniversitySelection={[Function]}
                          id={4}
/>,
                      ],
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "col s2",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <div
                            class="col s2"
/>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="col s2"
/>,
                            Array [
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={1}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={2}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={3}
/>,
                              <UniversityLabel
                                handleUniversitySelection={[Function]}
                                id={4}
/>,
                            ],
                          ],
                          "className": "row center-align",
                          "style": Object {},
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="row center-align"
                                    >
                                                                        <div
                                                                                                            class="col s2"
                                                                        />
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "selectUniversity": [Function],
                                                                                                                        "universities": Array [
                                                                                                                          Object {
                                                                                                                            "id": 1,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 2,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 3,
                                                                                                                          },
                                                                                                                          Object {
                                                                                                                            "id": 4,
                                                                                                                          },
                                                                                                                        ],
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "selectUniversity": [Function],
                                                                                                      "universities": Array [
                                                                                                        Object {
                                                                                                          "id": 1,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 2,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 3,
                                                                                                        },
                                                                                                        Object {
                                                                                                          "id": 4,
                                                                                                        },
                                                                                                      ],
                                                                                                    }
                                  }
/>,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "selectUniversity": [Function],
                                  "universities": Array [
                                    Object {
                                      "id": 1,
                                    },
                                    Object {
                                      "id": 2,
                                    },
                                    Object {
                                      "id": 3,
                                    },
                                    Object {
                                      "id": 4,
                                    },
                                  ],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": UniversitySelector {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                            "refs": Object {},
                            "selected": Array [],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div
                          class="row center-align"
>
                          <div
                                                    class="col s2"
                          />
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 4,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 3,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "forceUpdate": [Function],
              "props": Object {
                "handleUniversitySelection": [Function],
                "id": 2,
              },
              "refs": Object {},
              "render": [Function],
              "selectUniversity": [Function],
              "setState": [Function],
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 2,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": UniversityLabel {
              "_reactInternalFiber": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "internalContextTag": 0,
                "key": "3",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 3,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "2",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 2,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 2,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "internalContextTag": 0,
                  "key": "4",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "handleUniversitySelection": [Function],
                    "id": 4,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "1",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "2",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "handleUniversitySelection": [Function],
                          "id": 2,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": UniversityLabel {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "forceUpdate": [Function],
                          "props": Object {
                            "handleUniversitySelection": [Function],
                            "id": 2,
                          },
                          "refs": Object {},
                          "render": [Function],
                          "selectUniversity": [Function],
                          "setState": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 1,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Array [
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={1}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={2}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={3}
/>,
                      <UniversityLabel
                        handleUniversitySelection={[Function]}
                        id={4}
/>,
                    ],
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "col s2",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <div
                          class="col s2"
/>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col s2"
/>,
                          Array [
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={1}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={2}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={3}
/>,
                            <UniversityLabel
                              handleUniversitySelection={[Function]}
                              id={4}
/>,
                          ],
                        ],
                        "className": "row center-align",
                        "style": Object {},
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="row center-align"
                                  >
                                                                    <div
                                                                                                      class="col s2"
                                                                    />
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "selectUniversity": [Function],
                                                                                                                  "universities": Array [
                                                                                                                    Object {
                                                                                                                      "id": 1,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 2,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 3,
                                                                                                                    },
                                                                                                                    Object {
                                                                                                                      "id": 4,
                                                                                                                    },
                                                                                                                  ],
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "selectUniversity": [Function],
                                                                                                "universities": Array [
                                                                                                  Object {
                                                                                                    "id": 1,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 2,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 3,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "id": 4,
                                                                                                  },
                                                                                                ],
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "selectUniversity": [Function],
                                "universities": Array [
                                  Object {
                                    "id": 1,
                                  },
                                  Object {
                                    "id": 2,
                                  },
                                  Object {
                                    "id": 3,
                                  },
                                  Object {
                                    "id": 4,
                                  },
                                ],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": UniversitySelector {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                          "refs": Object {},
                          "selected": Array [],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div
                        class="row center-align"
>
                        <div
                                                class="col s2"
                        />
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": UniversityLabel {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "forceUpdate": [Function],
                    "props": Object {
                      "handleUniversitySelection": [Function],
                      "id": 4,
                    },
                    "refs": Object {},
                    "render": [Function],
                    "selectUniversity": [Function],
                    "setState": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "forceUpdate": [Function],
              "props": Object {
                "handleUniversitySelection": [Function],
                "id": 3,
              },
              "refs": Object {},
              "render": [Function],
              "selectUniversity": [Function],
              "setState": [Function],
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": "3",
            "nodeType": "class",
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 3,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": UniversityLabel {
              "_reactInternalFiber": FiberNode {
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 3,
                "internalContextTag": 0,
                "key": "4",
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleUniversitySelection": [Function],
                  "id": 4,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleUniversitySelection": [Function],
                      "id": 1,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "2",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleUniversitySelection": [Function],
                        "id": 2,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "internalContextTag": 0,
                        "key": "3",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "handleUniversitySelection": [Function],
                          "id": 3,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": UniversityLabel {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "forceUpdate": [Function],
                          "props": Object {
                            "handleUniversitySelection": [Function],
                            "id": 3,
                          },
                          "refs": Object {},
                          "render": [Function],
                          "selectUniversity": [Function],
                          "setState": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": UniversityLabel {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "forceUpdate": [Function],
                        "props": Object {
                          "handleUniversitySelection": [Function],
                          "id": 2,
                        },
                        "refs": Object {},
                        "render": [Function],
                        "selectUniversity": [Function],
                        "setState": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": UniversityLabel {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "forceUpdate": [Function],
                      "props": Object {
                        "handleUniversitySelection": [Function],
                        "id": 1,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "selectUniversity": [Function],
                      "setState": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Array [
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={1}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={2}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={3}
/>,
                    <UniversityLabel
                      handleUniversitySelection={[Function]}
                      id={4}
/>,
                  ],
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "col s2",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <div
                        class="col s2"
/>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col s2"
/>,
                        Array [
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={1}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={2}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={3}
/>,
                          <UniversityLabel
                            handleUniversitySelection={[Function]}
                            id={4}
/>,
                        ],
                      ],
                      "className": "row center-align",
                      "style": Object {},
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "selectUniversity": [Function],
                        "universities": Array [
                          Object {
                            "id": 1,
                          },
                          Object {
                            "id": 2,
                          },
                          Object {
                            "id": 3,
                          },
                          Object {
                            "id": 4,
                          },
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "selectUniversity": [Function],
                            "universities": Array [
                              Object {
                                "id": 1,
                              },
                              Object {
                                "id": 2,
                              },
                              Object {
                                "id": 3,
                              },
                              Object {
                                "id": 4,
                              },
                            ],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="row center-align"
                                >
                                                                <div
                                                                                                class="col s2"
                                                                />
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "selectUniversity": [Function],
                                                                                                            "universities": Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 2,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 3,
                                                                                                              },
                                                                                                              Object {
                                                                                                                "id": 4,
                                                                                                              },
                                                                                                            ],
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "selectUniversity": [Function],
                                                                                          "universities": Array [
                                                                                            Object {
                                                                                              "id": 1,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 2,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 3,
                                                                                            },
                                                                                            Object {
                                                                                              "id": 4,
                                                                                            },
                                                                                          ],
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="row center-align"
                              >
                                                            <div
                                                                                          class="col s2"
                                                            />
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "selectUniversity": [Function],
                              "universities": Array [
                                Object {
                                  "id": 1,
                                },
                                Object {
                                  "id": 2,
                                },
                                Object {
                                  "id": 3,
                                },
                                Object {
                                  "id": 4,
                                },
                              ],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": UniversitySelector {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "selectUniversity": [Function],
                          "universities": Array [
                            Object {
                              "id": 1,
                            },
                            Object {
                              "id": 2,
                            },
                            Object {
                              "id": 3,
                            },
                            Object {
                              "id": 4,
                            },
                          ],
                        },
                        "refs": Object {},
                        "selected": Array [],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div
                      class="row center-align"
>
                      <div
                                            class="col s2"
                      />
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "forceUpdate": [Function],
              "props": Object {
                "handleUniversitySelection": [Function],
                "id": 4,
              },
              "refs": Object {},
              "render": [Function],
              "selectUniversity": [Function],
              "setState": [Function],
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": "4",
            "nodeType": "class",
            "props": Object {
              "handleUniversitySelection": [Function],
              "id": 4,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
